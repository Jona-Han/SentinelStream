version: '3'
services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    networks:
      - app-network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CREATE_TOPICS='start_training_topic:1:1,start_build_topic:1:1'
  training:
    build:
      dockerfile: ./training/Dockerfile
    networks:
      - app-network
    environment:
      - KAFKA_SERVERS=kafka
      - KAFKA_TOPIC=start_training_topic
  packager:
    build:
      dockerfile: ./packager/Dockerfile
    networks:
      - app-network
    environment:
      - KAFKA_SERVERS=kafka
      - KAFKA_TOPIC=start_build_topic
  data-ingestion:
    build:
      dockerfile: ./data_ingestion/Dockerfile
    networks:
      - app-network
  app-management:
    build:
      dockerfile: ./app_management/Dockerfile
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
